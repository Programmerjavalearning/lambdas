public class Main {
    public static void main(String[] args) {

        Speakable speakable = (message) -> {
          String message1 = " Hello World";
            String message2 = message + message1 + " Second message";
            return message2;
        };
        System.out.println(speakable.speak("Here it goes"));








//        List<String> nameList = new ArrayList<>();
//        nameList.add("Bonni");
//        nameList.add("Nico");
//        nameList.add("Tom");
//        nameList.add("Mati");
//
//        nameList.forEach(
//                (names) -> System.out.println(names)
//        );

        // Same without lambda expression
//        for (String name : nameList){
//            System.out.println(name);
//
//        }




 /*       Addable addable = (a,b) -> (a+b);
        System.out.println("Addable function return :" + addable.add(5,10));

        Drawable drawable = (w,h) -> System.out.println("Drawing lambda width = " +w + " height = " + h );

        drawable.draw(6,8);*/

        //Without a lambda

//        Drawable drawable = new Drawable() {
//            @Override
//            public void draw() {
//                System.out.println("Drawing");
//
//            }
//        };
//
//        drawable.draw();


    }
}

interface Speakable{
    String speak(String message);
}

interface Addable{
    int add (int a, int b);
}


interface Drawable{
    public void draw(int width,int height );


}
