import java.util.ArrayList;
import java.util.List;
import java.util.stream.Stream;

class Product {
    int id;
    String name;
    float price;

    public Product(int id, String name, float price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }
}

public class Main {
    public static void main(String[] args) {

        List<Product> list = new ArrayList<>();

        // Add our products
        list.add(new Product(1,"Banana",13));
        list.add(new Product(2,"TV",900));
        list.add(new Product(3,"Switch",500));
        list.add(new Product(5,"Book",10));
        list.add(new Product(6,"PC Gamer",1900));

        // Streams

        System.out.println("Before Filter applied");

        list.forEach(
                (product) -> System.out.println(product.name + " " + product.price)
        );

        System.out.println("==============");

        Stream<Product> filteredData = list.stream().filter(
                product -> product.price > 1000);

        System.out.println("After Filter applied");


        filteredData.forEach(
                (product) -> System.out.println(product.name + " " + product.price)
        );



//        System.out.println("Sorting from the name");
//
//        Collections.sort(list, Comparator.comparing(p -> p.name));
//
//        for (Product p : list){
//            System.out.println(p.id  + " " + p.name + "  "+ p.price);
//        }
//
//        System.out.println("===============================");
//        System.out.println("Sorting from the price");
//
//        Collections.sort(list, Comparator.comparing(p -> p.price));
//
//        for (Product p : list){
//            System.out.println(p.id  + " " + p.name + "  "+ p.price);
//        }












//        Speakable speakable = (message) -> {
//          String message1 = " Hello World";
//            String message2 = message + message1 + " Second message";
//            return message2;
//        };
//        System.out.println(speakable.speak("Here it goes"));



//        List<String> nameList = new ArrayList<>();
//        nameList.add("Bonni");
//        nameList.add("Nico");
//        nameList.add("Tom");
//        nameList.add("Mati");
//
//        nameList.forEach(
//                (names) -> System.out.println(names)
//        );

        // Same without lambda expression
//        for (String name : nameList){
//            System.out.println(name);
//
//        }




 /*       Addable addable = (a,b) -> (a+b);
        System.out.println("Addable function return :" + addable.add(5,10));

        Drawable drawable = (w,h) -> System.out.println("Drawing lambda width = " +w + " height = " + h );

        drawable.draw(6,8);*/

        //Without a lambda

//        Drawable drawable = new Drawable() {
//            @Override
//            public void draw() {
//                System.out.println("Drawing");
//
//            }
//        };
//
//        drawable.draw();


    }
}

interface Speakable{
    String speak(String message);
}

interface Addable{
    int add (int a, int b);
}


interface Drawable{
    public void draw(int width,int height );


}
